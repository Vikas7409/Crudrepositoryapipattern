using CrudRepositorypattern.Repository;
using DataAcesLayer;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace CrudRepositorypattern.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class EmployeeController : Controller
    {
        private readonly IEmployeeRepository vikas;

        public EmployeeController (IEmployeeRepository vikas)
        {
            this.vikas = vikas;
        }

        [HttpGet]
        public async Task<ActionResult> GetEmployee()
        {
            try
            {

                return Ok(await vikas.GetEmployees());
            }
            catch (Exception)
            {

                return StatusCode(StatusCodes.Status500InternalServerError, 
                    "Error in reterving data from database");
            }
        }
        [HttpGet("{id:int}")]
        public async Task<ActionResult<Employee>> GetEmployee(int id)
        {
            try
            {
                var res = await vikas.GetEmployees(id);
                if (res == null)
                {
                    return NotFound();
                }
                return res;
            }
            catch (Exception)
            {

                return StatusCode(StatusCodes.Status500InternalServerError,
                    "Error in reterving data from database");
            }
        }
        [HttpPost]
        public async Task<ActionResult<Employee>> CreateEmployee(Employee employee)
        {
            try
            {
                
                if (employee == null)
                {
                    return BadRequest();
                }
                var res = await vikas.AddEmployee(employee);
                return CreatedAtAction(nameof(GetEmployee), new { id = res.Id });
            }
            catch (Exception)
            {

                return StatusCode(StatusCodes.Status500InternalServerError,
                    "Error in reterving data from database");
            }
        }

        [HttpPut("{id:int}")]
        public async Task<ActionResult<Employee>> UpdateEmployee(int id,Employee employee)
        {
            try
            {
                if (id != employee.Id)
                {
                    return BadRequest();
                }

                var res = await vikas.GetEmployees(id);

                if (res == null)
                {
                    return NotFound($"Employee Id={id} not found");
                }
               return await vikas.UpdateEmployee(employee);
            }
            catch (Exception)
            {

                return StatusCode(StatusCodes.Status500InternalServerError,
                    "Error in reterving data from database");
            }
        }

        [HttpDelete("{id:int}")]
        public async Task<ActionResult<Employee>> DeleteEmployee(int id)
        {
            try
            {
               

                var res = await vikas.GetEmployees(id);

                if (res == null)
                {
                    return NotFound($"Employee Id={id} not found");
                }
                return await vikas.DeleteEmployees(id);
            }
            catch (Exception)
            {

                return StatusCode(StatusCodes.Status500InternalServerError,
                    "Error in reterving data from database");
            }
        }
    }
}
