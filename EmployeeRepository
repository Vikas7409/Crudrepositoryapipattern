using CrudRepositorypattern.data;
using DataAcesLayer;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace CrudRepositorypattern.Repository
{
    public class EmployeeRepository : IEmployeeRepository
    {
        private readonly ApplicationDbContext context;

        public EmployeeRepository(ApplicationDbContext context)
        {
            this.context = context;
        }

        public async Task<Employee> AddEmployee(Employee employee)
        {
             var res = await context.employees.AddAsync(employee);
            await context.SaveChangesAsync();
            return res.Entity;
        }

        public async void DeleteEmployees(int id)
        {
            var res = await context.employees.Where(a => a.Id == id).FirstOrDefaultAsync();
            if(res != null)
            {
                context.employees.Remove(res);
                await context.SaveChangesAsync();
                
            }
        }

        public async Task<IEnumerable<Employee>> GetEmployees()
        {
            return await context.employees.ToListAsync();
        }

        public async Task<Employee> GetEmployees(int Id)
        {
            return await context.employees.FirstOrDefaultAsync(a => a.Id == Id);
        }

        public async Task<Employee> UpdateEmployee(Employee employee)
        {
            var res = await context.employees.FirstOrDefaultAsync(a => a.Id == employee.Id);
            if(res != null)
            {
                res.Name = employee.Name;
                res.Email = employee.Email;
                res.Adrees = employee.Adrees;
                await context.SaveChangesAsync();
                return res;
            }
            return null;
        }
    }
}
